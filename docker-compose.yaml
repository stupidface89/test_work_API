version: '3.9'
services:
  api:
    container_name: api
    build:
      dockerfile: ./app/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - './app:/opt/app'

  db:
    container_name: db
    build:
      dockerfile: ./db/Dockerfile
    restart: always
    env_file:
      - .env
    volumes:
      - './db/pg_data:/var/lib/postgresql/data'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d  $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    build:
      dockerfile: ./redis/Dockerfile
    env_file:
      - .env
    command: /bin/sh -c "redis-server --requirepass $${REDIS_PASSWORD}"

  celery-worker:
    container_name: celery-worker
    build:
      dockerfile: ./celery/Dockerfile
    env_file:
      - .env
    depends_on:
      - api
      - redis
    command: ['celery', '-A', 'todo', 'worker', '-l', 'INFO']
    volumes:
      - './app:/opt/app'

  celery-beat:
    container_name: celery-beat
    build:
      dockerfile: ./celery/Dockerfile
    env_file:
      - .env
    depends_on:
      - api
      - redis
    command: ['celery', '-A', 'todo', 'beat', '-l', 'INFO']
    volumes:
      - './app:/opt/app'

  nginx:
    container_name: nginx
    build:
      dockerfile: ./nginx/Dockerfile
    ports:
      - '80:80'
    depends_on:
      - api
    volumes:
      - './app:/var/api'
