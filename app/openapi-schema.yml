openapi: 3.0.3
info:
  title: Diary API
  version: 1.0.0
paths:
  /api/schema:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/diary/:
    get:
      operationId: api_v1_diary_list
      description: Получение списка всех публичных дневников
      parameters:
      - in: query
        name: create_date_after
        schema:
          type: string
          format: date
      - in: query
        name: create_date_before
        schema:
          type: string
          format: date
      - in: query
        name: expiration_after
        schema:
          type: string
          format: date
      - in: query
        name: expiration_before
        schema:
          type: string
          format: date
      - in: query
        name: kind
        schema:
          type: string
          title: Статус приватности
          enum:
          - private
          - public
        description: |-
          * `private` - Private
          * `public` - Public

          * `private` - Private
          * `public` - Public
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: owner
        schema:
          type: string
      - in: query
        name: title
        schema:
          type: string
      tags:
      - Diary
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiaryListCreateList'
          description: ''
    post:
      operationId: api_v1_diary_create
      description: Создание нового дневника
      tags:
      - Diary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiaryListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiaryListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiaryListCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiaryListCreate'
          description: ''
  /api/v1/diary/{diary_id}/:
    get:
      operationId: api_v1_diary_retrieve
      description: Получение конкретного дневника
      parameters:
      - in: path
        name: diary_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Diary
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiaryRetrieveUpdateDestroy'
          description: ''
    patch:
      operationId: api_v1_diary_partial_update
      description: Проверка прав пользователя на возможность удаления или обновления
        объекта
      parameters:
      - in: path
        name: diary_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiaryRetrieveUpdateDestroy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiaryRetrieveUpdateDestroy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiaryRetrieveUpdateDestroy'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiaryRetrieveUpdateDestroy'
          description: ''
    delete:
      operationId: api_v1_diary_destroy
      description: Удаление собственного дневника
      parameters:
      - in: path
        name: diary_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Diary
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/diary/{diary_id}/notes/:
    get:
      operationId: api_v1_diary_notes_list
      description: Список записей конкретного публичного дневника.
      parameters:
      - in: path
        name: diary_id
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteListCreateList'
          description: ''
    post:
      operationId: api_v1_diary_notes_create
      description: Список записей конкретного публичного дневника.
      parameters:
      - in: path
        name: diary_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteListCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteListCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteListCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteListCreate'
          description: ''
  /api/v1/diary/{diary_id}/notes/{note_id}:
    get:
      operationId: api_v1_diary_notes_retrieve
      description: Конкретная запись из конкретного дневника
      parameters:
      - in: path
        name: diary_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: note_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteRetrieveUpdateDestroy'
          description: ''
    patch:
      operationId: api_v1_diary_notes_partial_update
      description: Конкретная запись из конкретного дневника
      parameters:
      - in: path
        name: diary_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: note_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNoteRetrieveUpdateDestroy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNoteRetrieveUpdateDestroy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNoteRetrieveUpdateDestroy'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteRetrieveUpdateDestroy'
          description: ''
    delete:
      operationId: api_v1_diary_notes_destroy
      description: Конкретная запись из конкретного дневника
      parameters:
      - in: path
        name: diary_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: note_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/diary/profile/:
    get:
      operationId: api_v1_diary_profile_list
      description: Получение списка собственных дневников
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Diary
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiaryListCreateList'
          description: ''
  /api/v1/diary/profile/{user_id}:
    get:
      operationId: api_v1_diary_profile_list_2
      description: Получение списка публичных дневников пользователя
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Diary
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiaryListCreateList'
          description: ''
  /api/v1/users/create-user:
    post:
      operationId: api_v1_users_create_user_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUser'
          description: ''
components:
  schemas:
    CreateUser:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
      required:
      - email
      - password
    DiaryListCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          title: Заголовок
          maxLength: 250
          minLength: 3
        expiration:
          type: string
          format: date-time
          nullable: true
          title: Актуален до
        kind:
          allOf:
          - $ref: '#/components/schemas/KindEnum'
          title: Статус приватности
        owner:
          type: string
          readOnly: true
        create_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - create_date
      - owner
      - title
    DiaryRetrieveUpdateDestroy:
      type: object
      properties:
        title:
          type: string
          title: Заголовок
          maxLength: 250
          minLength: 3
        expiration:
          type: string
          format: date-time
          nullable: true
          title: Актуален до
        kind:
          allOf:
          - $ref: '#/components/schemas/KindEnum'
          title: Статус приватности
        owner:
          type: string
          readOnly: true
        create_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        note:
          type: array
          items:
            $ref: '#/components/schemas/NoteRetrieveUpdate'
          readOnly: true
      required:
      - create_date
      - note
      - owner
      - title
    KindEnum:
      enum:
      - private
      - public
      type: string
      description: |-
        * `private` - Private
        * `public` - Public
    NoteListCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        diary:
          type: string
          readOnly: true
        create_date:
          type: string
          format: date-time
          readOnly: true
        text:
          type: string
      required:
      - create_date
      - diary
      - text
    NoteRetrieveUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        create_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        text:
          type: string
      required:
      - create_date
      - text
    NoteRetrieveUpdateDestroy:
      type: object
      properties:
        id:
          type: string
          format: uuid
        diary:
          type: string
          format: uuid
          title: Дневник
        create_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        text:
          type: string
          title: Текст
          minLength: 3
      required:
      - create_date
      - diary
      - text
    PaginatedDiaryListCreateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DiaryListCreate'
    PaginatedNoteListCreateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/NoteListCreate'
    PatchedDiaryRetrieveUpdateDestroy:
      type: object
      properties:
        title:
          type: string
          title: Заголовок
          maxLength: 250
          minLength: 3
        expiration:
          type: string
          format: date-time
          nullable: true
          title: Актуален до
        kind:
          allOf:
          - $ref: '#/components/schemas/KindEnum'
          title: Статус приватности
        owner:
          type: string
          readOnly: true
        create_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        note:
          type: array
          items:
            $ref: '#/components/schemas/NoteRetrieveUpdate'
          readOnly: true
    PatchedNoteRetrieveUpdateDestroy:
      type: object
      properties:
        id:
          type: string
          format: uuid
        diary:
          type: string
          format: uuid
          title: Дневник
        create_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        text:
          type: string
          title: Текст
          minLength: 3
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
